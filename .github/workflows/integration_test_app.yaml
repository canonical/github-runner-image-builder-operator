name: Integration tests for application

on:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  integration-tests:
    name: Integration test
    runs-on: [self-hosted, X64, jammy, stg-private-endpoint]
    strategy:
      fail-fast: false
      matrix:
        image: [jammy, noble]
        arch: [amd64, arm64, s390x]
        include:
          - image: jammy
            arch: amd64
          - image: noble
            arch: amd64
          - image: noble
            arch: arm64
          - image: noble
            arch: s390x
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: canonical/setup-lxd@v0.1.2
      - name: Install tox
        run: |
          sudo apt-get update
          sudo apt-get install pipx -y
          pipx ensurepath
          pipx install tox
      - name: Export environment (amd64)
        if: matrix.arch == 'amd64'
        run: |
          echo "export OPENSTACK_PASSWORD_AMD64=${{ secrets.OPENSTACK_PASSWORD_AMD64 }}" >> $GITHUB_ENV
          echo "::add-mask::$OPENSTACK_PASSWORD_AMD64"
      - name: Export environment (arm64)
        if: matrix.arch == 'arm64'
        run: |
          echo "export OPENSTACK_PASSWORD_ARM64=${{ secrets.OPENSTACK_PASSWORD_ARM64 }}" >> $GITHUB_ENV
          echo "::add-mask::$OPENSTACK_PASSWORD_ARM64"
      - name: Export environment (s390x)
        if: matrix.arch == 's390x'
        run: |
          echo "export OPENSTACK_PASSWORD_S390X=${{ secrets.OPENSTACK_PASSWORD_S390X }}" >> $GITHUB_ENV
          echo "::add-mask::$OPENSTACK_PASSWORD_S390X"
      - name: Run integration tests
        run: |
         cd app 
         tox -e integration -- --arch ${{ matrix.arch }} --image=${{ matrix.image }} ${{ secrets.INTEGRATION_TEST_ARGS_APP }}
  required_status_checks:
    name: Required Integration Test For Application Status Checks
    runs-on: ubuntu-latest
    needs:
    if: always() && !cancelled()
    timeout-minutes: 5
    steps:
      - run: |
          [ '${{ needs.integration-tests.result }}' = 'success' ] || (echo integration-tests failed && false)
